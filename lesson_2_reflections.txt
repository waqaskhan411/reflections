What happens when you initialize a repository? Why do you need to do it?
   When we initialize a repository in a directory a hidden folder by the name of .git is created in that folder the meta data containing details of the 
files that were changed is present in the .git folder.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The stagging area is a place we can put in selected files that we want to commit if we are still working on other files that have not been 
completed yet, also its different from the working directory as it contains all the files currently being worked on and the repository contains
the history of versions and files of those versions. The Staging area adds tremenduous value as it enables us to save only logical changes to our 
program rather than committing whole programs

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?